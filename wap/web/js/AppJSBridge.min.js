!function (a) {
  var b, c;
  a.navRightBarCallback = new Function, -1 != a.navigator.userAgent.toLowerCase().search("ctcfapple") && (a.setupWebViewJavascriptBridge = function (b) {
    if (a.WebViewJavascriptBridge)return b(WebViewJavascriptBridge);
    if (a.WVJBCallbacks)return a.WVJBCallbacks.push(b);
    a.WVJBCallbacks = [b];
    var c = document.createElement("iframe");
    c.style.display = "none", c.src = "wvjbscheme://__BRIDGE_LOADED__", document.documentElement.appendChild(c), setTimeout(function () {
      document.documentElement.removeChild(c)
    }, 0)
  }, a.navRightBarCallback = function (b) {
    a.setupWebViewJavascriptBridge(function (a) {
      a.registerHandler("getRightButton", function () {
        "function" == typeof b && b()
      })
    })
  }), navigator.userAgent.toLowerCase().match("ctcfandroid") && (function () {
    function j(a) {
      b = a.createElement("iframe"), b.style.display = "none", a.documentElement.appendChild(b)
    }

    function k(a) {
      var b, c;
      if (s._messageHandler)throw new Error("WebViewJavascriptBridge.init called twice");
      for (s._messageHandler = a, b = d, d = null, c = 0; c < b.length; c++)q(b[c])
    }

    function l(a, b) {
      o({data: a}, b)
    }

    function m(a, b) {
      e[a] = b
    }

    function n(a, b, c) {
      o({handlerName: a, data: b}, c)
    }

    function o(a, d) {
      if (d) {
        var e = "cb_" + i++ + "_" + (new Date).getTime();
        h[e] = d, a.callbackId = e
      }
      c.push(a), b.src = f + "://" + g
    }

    function p() {
      var a = JSON.stringify(c);
      c = [], b.src = f + "://return/_fetchQueue/" + encodeURIComponent(a)
    }

    function q(a) {
      setTimeout(function () {
        var c, d, f, b = JSON.parse(a);
        if (b.responseId) {
          if (c = h[b.responseId], !c)return;
          c(b.responseData), delete h[b.responseId]
        } else {
          b.callbackId && (d = b.callbackId, c = function (a) {
            o({responseId: d, responseData: a})
          }), f = s._messageHandler, b.handlerName && (f = e[b.handlerName]);
          try {
            f(b.data, c)
          } catch (g) {
            "undefined" != typeof console && console.log("WebViewJavascriptBridge: WARNING: javascript handler threw.", b, g)
          }
        }
      })
    }

    function r(a) {
      console.log(a), d && d.length > 0 ? d.push(a) : q(a)
    }

    var b, c, d, e, f, g, h, i, s, t, u;
    a.WebViewJavascriptBridge || (c = [], d = [], e = {}, f = "yy", g = "__QUEUE_MESSAGE__/", h = {}, i = 1, s = a.WebViewJavascriptBridge = {
      init: k,
      send: l,
      registerHandler: m,
      callHandler: n,
      _fetchQueue: p,
      _handleMessageFromNative: r
    }, t = document, j(t), u = t.createEvent("Events"), u.initEvent("WebViewJavascriptBridgeReady"), u.bridge = s, t.dispatchEvent(u))
  }(), a.navRightBarCallback = function (a) {
    WebViewJavascriptBridge.registerHandler("getRightButton", function () {
      "function" == typeof a && a()
    })
  }), b = function (b, c, d) {
    a["WebViewJavascriptBridge"].callHandler(b, c, function (a) {
      null != a && "" != a && void 0 != a && "function" == typeof d && d(a)
    })
  }, c = function (b, c, d) {
    a["setupWebViewJavascriptBridge"](function (a) {
      a.callHandler(b, c, function (a) {
        null != a && "" != a && void 0 != a && "function" == typeof d && d(a)
      })
    })
  }, a.NativePageController = function (d, e, f) {
    -1 != a.navigator.userAgent.toLowerCase().search("ctcfandroid") ? a["WebViewJavascriptBridge"] && b(d, e, f) : -1 != a.navigator.userAgent.toLowerCase().search("ctcfapple") && a["setupWebViewJavascriptBridge"] && c(d, e, f)
  }
}(window);
